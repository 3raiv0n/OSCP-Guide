ncat -lvp 444 -e cmd.exe --allow e.f.g.h --ssl #serve as ncat server allowing connection from e.f.g.h over ssl through port 444 
ncat -v a.b.c.d 444 --ssl #connect to a.b.c.d via port 444 over ssl

ncat -4                   				#Use IPv4 only
ncat -6                					#Use IPv6 only
ncat -U, --unixsock       				#Use Unix domain sockets only
ncat --vsock              				#Use vsock sockets only
ncat -C, --crlf           				#Use CRLF for EOL sequence
ncat -c, --sh-exec <command>    		#Executes the given command via /bin/sh
            
ncat -e, --exec <command>       		#Executes the given command
ncat --lua-exec <filename>  			#Executes the given Lua script
ncat -g hop1[,hop2,...]         		#Loose source routing hop points (8 max)
ncat -G <n>                     #Loose source routing hop pointer (4, 8, 12, ...)
ncat -m, --max-conns <n>        #Maximum <n> simultaneous connections
ncat -h, --help                 #Display this help screen
ncat -d, --delay <time>         #Wait between read/writes
ncat -o, --output <filename>    #Dump session data to a file
ncat -x, --hex-dump <filename>  #Dump session data as hex to a file
ncat -i, --idle-timeout <time>  #Idle read/write timeout
ncat -p, --source-port port     #Specify source port to use
ncat -s, --source addr          #Specify source address to use (doesn't affect -l)
ncat -l, --listen               #Bind and listen for incoming connections
ncat -k, --keep-open            #Accept multiple connections in listen mode
ncat -n, --nodns                #Do not resolve hostnames via DNS
ncat -t, --telnet               #Answer Telnet negotiations
ncat -u, --udp                  #Use UDP instead of default TCP

ncat --sctp                 #Use SCTP instead of default TCP

ncat -v, --verbose              #Set verbosity level (can be used several times)
ncat -w, --wait <time>          #Connect timeout
ncat -z                         #Zero-I/O mode, report connection status only
ncat --append-output        #Append rather than clobber specified output files
ncat --send-only            #Only send data, ignoring received; quit on EOF
ncat -recv-only            #Only receive data, never send anything
ncat --no-shutdown          #Continue half-duplex when receiving EOF on stdin
ncat --allow                #Allow only given hosts to connect to Ncat
ncat --allowfile            #A file of hosts allowed to connect to Ncat
ncat --deny                 #Deny given hosts from connecting to Ncat
ncat --denyfile             #A file of hosts denied from connecting to Ncat
ncat --broker               #Enable Ncat's connection brokering mode
ncat --chat                 #Start a simple Ncat chat server
ncat --proxy <addr[:port]>  #Specify address of host to proxy through
ncat --proxy-type <type>    #Specify proxy type ("http", "socks4", "socks5")
ncat --proxy-auth <auth>    #Authenticate with HTTP or SOCKS proxy server
ncat --proxy-dns <type>     #Specify where to resolve proxy destination
ncat --ssl                  #Connect or listen with SSL
ncat --ssl-cert             #Specify SSL certificate file (PEM) for listening
ncat --ssl-key              #Specify SSL private key (PEM) for listening
ncat --ssl-verify           #Verify trust and domain name of certificates
ncat --ssl-trustfile        #PEM file containing trusted SSL certificates
ncat --ssl-ciphers          #Cipherlist containing SSL ciphers to use
ncat --ssl-alpn             #ALPN protocol list to use.
ncat --version              #Display Ncat's version information and exit
